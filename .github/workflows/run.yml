# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: arXiv-daily-ai-enhanced

on:
  schedule:
    - cron: "30 16 * * *"  # ÊØèÂ§© UTC 16:30 ÊâßË°åÔºåÁõ∏ÂΩì‰∫éÂåó‰∫¨Êó∂Èó¥ 00:30
  workflow_dispatch:


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        uv sync
    - name: Run script
      run: |
        source .venv/bin/activate
        export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        export OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }}
        export LANGUAGE="${{ vars.LANGUAGE }}"
        export CATEGORIES="${{ vars.CATEGORIES }}"
        export MODEL_NAME="${{ vars.MODEL_NAME }}"
        bash run.sh
    - name: commit
      run: |
        git config --global user.email "${{ vars.EMAIL }}"
        git config --global user.name "${{ vars.NAME }}"
        git add .
        # Ê£ÄÊü•ÊòØÂê¶ÊúâÂèòÊõ¥ÈúÄË¶ÅÊèê‰∫§
        if git diff --staged --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        git commit -m "update"
    - name: Pull latest changes and push
      run: |
        # ËÆæÁΩÆGitÈÖçÁΩÆ‰ª•Â§ÑÁêÜËá™Âä®ÂêàÂπ∂
        git config pull.rebase true
        git config rebase.autoStash true
        
        # Â∞ùËØïÊé®ÈÄÅÔºåÂ¶ÇÊûúÂ§±Ë¥•ÂàôÊãâÂèñÂπ∂ÈáçËØï
        for i in {1..3}; do
          echo "Push attempt $i"
          if git push origin main; then
            echo "Push successful"
            break
          else
            echo "Push failed, pulling latest changes..."
            git pull origin main --no-edit || true
            if [ $i -eq 3 ]; then
              echo "Failed to push after 3 attempts"
              exit 1
            fi
          fi
        done
    - name: Check Email Configuration
      run: |
        if [ -z "${{ vars.NOTIFICATION_EMAIL }}" ]; then
          echo "‚ö†Ô∏è Email notification is not configured. Skipping email sending."
          echo "To enable email notifications, please set NOTIFICATION_EMAIL variable and SMTP secrets."
        else
          echo "‚úÖ Email notification is configured for: ${{ vars.NOTIFICATION_EMAIL }}"
        fi
    - name: Set Date Environment Variable
      if: success() && vars.NOTIFICATION_EMAIL != ''
      continue-on-error: true
      run: echo "TODAY=$(date -u '+%Y-%m-%d')" >> $GITHUB_ENV
    - name: Prepare Email Template
      if: success() && vars.NOTIFICATION_EMAIL != ''
      continue-on-error: true
      run: |
        # ÊâßË°åÈÇÆ‰ª∂Ê®°ÊùøÂáÜÂ§áËÑöÊú¨
        bash .github/scripts/prepare-email-template.sh \
          "${{ env.TODAY }}" \
          "${{ github.run_started_at }}" \
          "${{ github.run_number }}" \
          "${{ vars.CATEGORIES }}" \
          "${{ vars.MODEL_NAME }}" \
          "${{ vars.LANGUAGE }}" \
          "${{ github.repository }}" \
          "${{ github.run_id }}" \
          "${{ github.ref_name }}" \
          "${{ github.actor }}" \
          "${{ github.event_name }}"
    - name: Send Email Notification
      if: success() && vars.NOTIFICATION_EMAIL != ''
      continue-on-error: true
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{ secrets.SMTP_SERVER }}
        server_port: ${{ secrets.SMTP_PORT }}
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: "üìö Daily arXiv AI Enhanced ${{ env.TODAY }}"
        to: ${{ vars.NOTIFICATION_EMAIL }}
        from: ${{ secrets.SMTP_USERNAME }}
        html_body: file://email_template.html
